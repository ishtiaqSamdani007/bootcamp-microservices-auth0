# name: microservices CI/CD

# on:
#   push:
#     paths:
#       - "backend/**"
#       - ".github/workflows/backend.yaml"
# env:
#   GITHUB_USER: ishtiaqsamdani007
# jobs:
#   build:
#     runs-on: ubuntu-latest

#     timeout-minutes: 15
    
#     strategy:
#         matrix:
#             services:
#                 - address-service
#                 - user-service
#                 - appointment-service
#                 - card-service
#                 - cloud-gateway
#                 - lab-service
#                 - patient-service
#                 - service-registry
#                 - test-lab-service
#                 - test-service
                
#     defaults:
#         run:
#             working-directory: backend
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3

#     #   - name: start strategy
#     #     run: |
#     #         cd ${{matrix.services}}
#     #         ls
#     #         pwd

#       - name: Set up JDK 11
#         uses: actions/setup-java@v3
#         with:
#           distribution: "corretto"
#           java-version: "11"
#       - name: start strategy
#         run: pwd

#     #   - name: Build with Maven
#     #     run: mvn clean package -DskipTests

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ env.GITHUB_USER }}
#           password: ${{ secrets.GIT_TOKEN }}

#     #   - name: Build and Push Docker Image
#     #     uses: docker/build-push-action@v2
#     #     with:
#     #       context: ./backend/${{ matrix.services }}
#     #       push: true
#     #       tags: ghcr.io/${{ env.GITHUB_USER }}/auth0-backend-${{ matrix.services }}:${{ github.run_number }}
          
#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#             aws-region: ${{ secrets.AWS_REGION }}

#       - name: adding eks-cluster
#         env:
#             aws_region: ${{ secrets.AWS_REGION }}
#             cluster_name: ${{ secrets.CLUSTER_NAME }}
#             IMAGE: ghcr.io/${{ env.GITHUB_USER }}/auth0-backend-${{ matrix.services }}:${{ github.run_number }}
#         run: |
#             aws eks --region $aws_region update-kubeconfig --name $cluster_name


#       - name: Run Strategy
#         run: |
#             cd ${{ matrix.services }}
#             mvn clean package -DskipTests
#             docker build -t ghcr.io/${{ env.GITHUB_USER }}/auth0-backend-${{ matrix.services }}:${{ github.run_number }} .
#             docker push ghcr.io/${{ env.GITHUB_USER }}/auth0-backend-${{ matrix.services }}:${{ github.run_number }}
#             kubectl set image deployment/${{ matrix.services }} ${{ matrix.services }}-container=ghcr.io/${{ env.GITHUB_USER }}/auth0-backend-${{ matrix.services }}:${{ github.run_number }}






name: Deploy backend to GHCR and EKS

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yaml'
env:
  GITHUB_USER: ishtiaqsamdani007
jobs:
  deploy_address_service:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: '11'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Adding EKS cluster
        env: 
          aws_region: ${{ secrets.AWS_REGION }}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
        run: |
          aws eks --region $aws_region update-kubeconfig --name $cluster_name

      - name: Build and Deploy address-service
        run: |
          cd backend/address-service
          mvn clean package -DskipTests
          docker build -t ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-address-service:v${{ github.run_number }} .
          docker push ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-address-service:v${{ github.run_number }}
          kubectl set image deployment/address-service address-service-container=ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-address-service:v${{ github.run_number }}

  deploy_user_service:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: '11'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Adding EKS cluster
        env: 
          aws_region: ${{ secrets.AWS_REGION }}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
        run: |
          aws eks --region $aws_region update-kubeconfig --name $cluster_name

      - name: Build and Deploy user-service
        run: |
          cd backend/user-service
          mvn clean package -DskipTests
          docker build -t ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-user-service:v${{ github.run_number }} .
          docker push ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-user-service:v${{ github.run_number }}
          kubectl set image deployment/user-service user-service-container=ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-user-service:v${{ github.run_number }}

  deploy_appointment_service:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: '11'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Adding EKS cluster
        env: 
          aws_region: ${{ secrets.AWS_REGION }}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
        run: |
          aws eks --region $aws_region update-kubeconfig --name $cluster_name

      - name: Build and Deploy appointment-service
        run: |
          cd backend/appointment-service
          mvn clean package -DskipTests
          docker build -t ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-appointment-service:v${{ github.run_number }} .
          docker push ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-appointment-service:v${{ github.run_number }}
          kubectl set image deployment/appointment-service appointment-service-container=ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-appointment-service:v${{ github.run_number }}

  deploy_card_service:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: '11'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Adding EKS cluster
        env: 
          aws_region: ${{ secrets.AWS_REGION }}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
        run: |
          aws eks --region $aws_region update-kubeconfig --name $cluster_name

      - name: Build and Deploy card-service
        run: |
          cd backend/card-service
          mvn clean package -DskipTests
          docker build -t ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-card-service:v${{ github.run_number }} .
          docker push ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-card-service:v${{ github.run_number }}
          kubectl set image deployment/card-service card-service-container=ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-card-service:v${{ github.run_number }}

  deploy_cloud_gateway:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: '11'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Adding EKS cluster
        env: 
          aws_region: ${{ secrets.AWS_REGION }}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
        run: |
          aws eks --region $aws_region update-kubeconfig --name $cluster_name

      - name: Build and Deploy cloud-gateway
        run: |
          cd backend/cloud-gateway
          mvn clean package -DskipTests
          docker build -t ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-cloud-gateway:v${{ github.run_number }} .
          docker push ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-cloud-gateway:v${{ github.run_number }}
          kubectl set image deployment/cloud-gateway cloud-gateway-container=ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-cloud-gateway:v${{ github.run_number }}

  deploy_lab_service:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: '11'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Adding EKS cluster
        env: 
          aws_region: ${{ secrets.AWS_REGION }}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
        run: |
          aws eks --region $aws_region update-kubeconfig --name $cluster_name

      - name: Build and Deploy lab-service
        run: |
          cd backend/lab-service
          mvn clean package -DskipTests
          docker build -t ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-lab-service:v${{ github.run_number }} .
          docker push ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-lab-service:v${{ github.run_number }}
          kubectl set image deployment/lab-service lab-service-container=ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-lab-service:v${{ github.run_number }}

  deploy_patient_service:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: '11'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Adding EKS cluster
        env: 
          aws_region: ${{ secrets.AWS_REGION }}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
        run: |
          aws eks --region $aws_region update-kubeconfig --name $cluster_name

      - name: Build and Deploy patient-service
        run: |
          cd backend/patient-service
          mvn clean package -DskipTests
          docker build -t ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-patient-service:v${{ github.run_number }} .
          docker push ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-patient-service:v${{ github.run_number }}
          kubectl set image deployment/patient-service patient-service-container=ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-patient-service:v${{ github.run_number }}

  deploy_service_registry:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: '11'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Adding EKS cluster
        env: 
          aws_region: ${{ secrets.AWS_REGION }}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
        run: |
          aws eks --region $aws_region update-kubeconfig --name $cluster_name

      - name: Build and Deploy service-registry
        run: |
          cd backend/service-registry
          mvn clean package -DskipTests
          docker build -t ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-service-registry:v${{ github.run_number }} .
          docker push ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-service-registry:v${{ github.run_number }}
          kubectl set image deployment/service-registry service-registry-container=ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-service-registry:v${{ github.run_number }}

  deploy_test_lab_service:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: '11'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Adding EKS cluster
        env: 
          aws_region: ${{ secrets.AWS_REGION }}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
        run: |
          aws eks --region $aws_region update-kubeconfig --name $cluster_name

      - name: Build and Deploy test-lab-service
        run: |
          cd backend/test-lab-service
          mvn clean package -DskipTests
          docker build -t ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-test-lab-service:v${{ github.run_number }} .
          docker push ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-test-lab-service:v${{ github.run_number }}
          kubectl set image deployment/test-lab-service test-lab-service-container=ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-test-lab-service:v${{ github.run_number }}

  deploy_test_service:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: '11'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Adding EKS cluster
        env: 
          aws_region: ${{ secrets.AWS_REGION }}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
        run: |
          aws eks --region $aws_region update-kubeconfig --name $cluster_name

      - name: Build and Deploy test-service
        run: |
          cd backend/test-service
          mvn clean package -DskipTests
          docker build -t ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-test-service:v${{ github.run_number }} .
          docker push ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-test-service:v${{ github.run_number }}
          kubectl set image deployment/test-service test-service-container=ghcr.io/${{ env.GITHUB_USER }}/auth0-bootcamp-backend-test-service:v${{ github.run_number }}



